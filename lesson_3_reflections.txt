-When would you want to create a remote repository rather than keeping all your work local?

Anytime you or others need to access the files to colaborate or work remotly you would want to keep your work in a remote repository.

-Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You wont always want to pull down ALL changes made on GitHub. For instance someone might add a file that you think isn't going to work within your project. If it automatically pulled the file would be in your local instance without you wanting it there.

-Describe the difference between forks, clones, and branches. When would you use one instead of another?

Forks: A clone of another GitHub users repository, enables you to clone what they have and begin working with it while not affecting the original source repository.

Clones: A litteral clone of a repository. Can be taken from GitHub or locally. This is generally used on your own inhouse projects.

Branches: A branch will let you break off from the current main trunk so you can work on something different in the code without affecting the master. If your changes are going to be put in use you are able to merge your branch back into the master adding the changes and helping complete the master.

-What is the benefit of having a copy of the last known state of the remote stored locally?

Incase you're going to be somewhere with no internet access to constantly update you will have the last known state available to you in order to continue work on that branch.

-How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git I would be using Google Drive Docs to record and share all updates/notes to one master document. While it really has no learning curve compared to Gits small curve it still dosen't make it any easier. So ntohing would be easier in doing it my old way.

-When would you want to make changes in a seprate branch rather than directly in master? What benefits does each approach have?

You would want to make changes in a seprate branch if you're looking to test out a new idea or option for your app. 